{"version":3,"sources":["respond.js"],"names":["window","matchMedia","doc","undefined","bool","docElem","documentElement","refNode","firstElementChild","firstChild","fakeBody","createElement","div","id","style","cssText","background","appendChild","q","innerHTML","insertBefore","offsetWidth","removeChild","matches","media","document","win","callMedia","applyMedia","respond","update","mediaQueriesSupported","lastCall","resizeDefer","eminpx","mediastyles","rules","appendedEls","parsedSheets","resizeThrottle","head","getElementsByTagName","base","links","requestQueue","ripCSS","sheet","href","isCSS","sheets","sl","length","i","rel","toLowerCase","styleSheet","rawCssText","translate","test","replace","RegExp","$1","split","location","host","push","makeRequests","thisRequest","shift","ajax","styles","setTimeout","j","fullq","thisq","eachq","eql","qs","match","ql","substring","lastIndexOf","repUrls","css","useMedia","$2","hasquery","indexOf","minw","parseFloat","maxw","getEmValue","ret","body","fakeUsed","fromResize","name","docElemProp","currWidth","compatMode","styleBlocks","lastLink","now","Date","getTime","clearTimeout","thisstyle","min","max","minnull","maxnull","em","parentNode","ss","join","type","nextSibling","createTextNode","url","callback","req","xmlHttp","open","onreadystatechange","readyState","status","responseText","send","xmlhttpmethod","XMLHttpRequest","e","ActiveXObject","addEventListener","attachEvent","this"],"mappings":"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","file":"respond.js","sourcesContent":["/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */\n/*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherwise, you don't need this part */\nwindow.matchMedia = window.matchMedia || (function(doc, undefined) {\n\n  var bool,\n    docElem = doc.documentElement,\n    refNode = docElem.firstElementChild || docElem.firstChild,\n    // fakeBody required for <FF4 when executed in <head>\n    fakeBody = doc.createElement('body'),\n    div = doc.createElement('div');\n\n  div.id = 'mq-test-1';\n  div.style.cssText = \"position:absolute;top:-100em\";\n  fakeBody.style.background = \"none\";\n  fakeBody.appendChild(div);\n\n  return function(q) {\n\n    div.innerHTML = '&shy;<style media=\"' + q + '\"> #mq-test-1 { width: 42px; }</style>';\n\n    docElem.insertBefore(fakeBody, refNode);\n    bool = div.offsetWidth == 42;\n    docElem.removeChild(fakeBody);\n\n    return {\n      matches: bool,\n      media: q\n    };\n  };\n\n})(document);\n\n\n\n\n/*! Respond.js v1.1.0: min/max-width media query polyfill. (c) Scott Jehl. MIT/GPLv2 Lic. j.mp/respondjs  */\n(function(win) {\n  //exposed namespace\n  win.respond = {};\n\n  //define update even in native-mq-supporting browsers, to avoid errors\n  respond.update = function() {};\n\n  //expose media query support flag for external use\n  respond.mediaQueriesSupported = win.matchMedia && win.matchMedia(\"only all\").matches;\n\n  //if media queries are supported, exit here\n  if (respond.mediaQueriesSupported) {\n    return;\n  }\n\n  //define vars\n  var doc = win.document,\n    docElem = doc.documentElement,\n    mediastyles = [],\n    rules = [],\n    appendedEls = [],\n    parsedSheets = {},\n    resizeThrottle = 30,\n    head = doc.getElementsByTagName(\"head\")[0] || docElem,\n    base = doc.getElementsByTagName(\"base\")[0],\n    links = head.getElementsByTagName(\"link\"),\n    requestQueue = [],\n\n    //loop stylesheets, send text content to translate\n    ripCSS = function() {\n      var sheets = links,\n        sl = sheets.length,\n        i = 0,\n        //vars for loop:\n        sheet, href, media, isCSS;\n\n      for (; i < sl; i++) {\n        sheet = sheets[i],\n          href = sheet.href,\n          media = sheet.media,\n          isCSS = sheet.rel && sheet.rel.toLowerCase() === \"stylesheet\";\n\n        //only links plz and prevent re-parsing\n        if (!!href && isCSS && !parsedSheets[href]) {\n          // selectivizr exposes css through the rawCssText expando\n          if (sheet.styleSheet && sheet.styleSheet.rawCssText) {\n            translate(sheet.styleSheet.rawCssText, href, media);\n            parsedSheets[href] = true;\n          } else {\n            if ((!/^([a-zA-Z:]*\\/\\/)/.test(href) && !base) || href.replace(RegExp.$1, \"\").split(\"/\")[0] === win.location.host) {\n              requestQueue.push({\n                href: href,\n                media: media\n              });\n            }\n          }\n        }\n      }\n      makeRequests();\n    },\n\n    //recurse through request queue, get css text\n    makeRequests = function() {\n      if (requestQueue.length) {\n        var thisRequest = requestQueue.shift();\n\n        ajax(thisRequest.href, function(styles) {\n          translate(styles, thisRequest.href, thisRequest.media);\n          parsedSheets[thisRequest.href] = true;\n\n          // by wrapping recursive function call in setTimeout\n          // we prevent \"Stack overflow\" error in IE7\n          setTimeout(function() {\n            makeRequests();\n          }, 0);\n        });\n      }\n    },\n\n    //find media blocks in css text, convert to style blocks\n    translate = function(styles, href, media) {\n      var qs = styles.match(/@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi),\n        ql = qs && qs.length || 0,\n        //try to get CSS path\n        href = href.substring(0, href.lastIndexOf(\"/\")),\n        repUrls = function(css) {\n          return css.replace(/(url\\()['\"]?([^\\/\\)'\"][^:\\)'\"]+)['\"]?(\\))/g, \"$1\" + href + \"$2$3\");\n        },\n        useMedia = !ql && media,\n        //vars used in loop\n        i = 0,\n        j, fullq, thisq, eachq, eql;\n\n      //if path exists, tack on trailing slash\n      if (href.length) {\n        href += \"/\";\n      }\n\n      //if no internal queries exist, but media attr does, use that\n      //note: this currently lacks support for situations where a media attr is specified on a link AND\n      //its associated stylesheet has internal CSS media queries.\n      //In those cases, the media attribute will currently be ignored.\n      if (useMedia) {\n        ql = 1;\n      }\n\n\n      for (; i < ql; i++) {\n        j = 0;\n\n        //media attr\n        if (useMedia) {\n          fullq = media;\n          rules.push(repUrls(styles));\n        }\n        //parse for styles\n        else {\n          fullq = qs[i].match(/@media *([^\\{]+)\\{([\\S\\s]+?)$/) && RegExp.$1;\n          rules.push(RegExp.$2 && repUrls(RegExp.$2));\n        }\n\n        eachq = fullq.split(\",\");\n        eql = eachq.length;\n\n        for (; j < eql; j++) {\n          thisq = eachq[j];\n          mediastyles.push({\n            media: thisq.split(\"(\")[0].match(/(only\\s+)?([a-zA-Z]+)\\s?/) && RegExp.$2 || \"all\",\n            rules: rules.length - 1,\n            hasquery: thisq.indexOf(\"(\") > -1,\n            minw: thisq.match(/\\(min\\-width:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\"),\n            maxw: thisq.match(/\\(max\\-width:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\")\n          });\n        }\n      }\n\n      applyMedia();\n    },\n\n    lastCall,\n\n    resizeDefer,\n\n    // returns the value of 1em in pixels\n    getEmValue = function() {\n      var ret,\n        div = doc.createElement('div'),\n        body = doc.body,\n        fakeUsed = false;\n\n      div.style.cssText = \"position:absolute;font-size:1em;width:1em\";\n\n      if (!body) {\n        body = fakeUsed = doc.createElement(\"body\");\n        body.style.background = \"none\";\n      }\n\n      body.appendChild(div);\n\n      docElem.insertBefore(body, docElem.firstChild);\n\n      ret = div.offsetWidth;\n\n      if (fakeUsed) {\n        docElem.removeChild(body);\n      } else {\n        body.removeChild(div);\n      }\n\n      //also update eminpx before returning\n      ret = eminpx = parseFloat(ret);\n\n      return ret;\n    },\n\n    //cached container for 1em value, populated the first time it's needed\n    eminpx,\n\n    //enable/disable styles\n    applyMedia = function(fromResize) {\n      var name = \"clientWidth\",\n        docElemProp = docElem[name],\n        currWidth = doc.compatMode === \"CSS1Compat\" && docElemProp || doc.body[name] || docElemProp,\n        styleBlocks = {},\n        lastLink = links[links.length - 1],\n        now = (new Date()).getTime();\n\n      //throttle resize calls\n      if (fromResize && lastCall && now - lastCall < resizeThrottle) {\n        clearTimeout(resizeDefer);\n        resizeDefer = setTimeout(applyMedia, resizeThrottle);\n        return;\n      } else {\n        lastCall = now;\n      }\n\n      for (var i in mediastyles) {\n        var thisstyle = mediastyles[i],\n          min = thisstyle.minw,\n          max = thisstyle.maxw,\n          minnull = min === null,\n          maxnull = max === null,\n          em = \"em\";\n\n        if (!!min) {\n          min = parseFloat(min) * (min.indexOf(em) > -1 ? (eminpx || getEmValue()) : 1);\n        }\n        if (!!max) {\n          max = parseFloat(max) * (max.indexOf(em) > -1 ? (eminpx || getEmValue()) : 1);\n        }\n\n        // if there's no media query at all (the () part), or min or max is not null, and if either is present, they're true\n        if (!thisstyle.hasquery || (!minnull || !maxnull) && (minnull || currWidth >= min) && (maxnull || currWidth <= max)) {\n          if (!styleBlocks[thisstyle.media]) {\n            styleBlocks[thisstyle.media] = [];\n          }\n          styleBlocks[thisstyle.media].push(rules[thisstyle.rules]);\n        }\n      }\n\n      //remove any existing respond style element(s)\n      for (var i in appendedEls) {\n        if (appendedEls[i] && appendedEls[i].parentNode === head) {\n          head.removeChild(appendedEls[i]);\n        }\n      }\n\n      //inject active styles, grouped by media type\n      for (var i in styleBlocks) {\n        var ss = doc.createElement(\"style\"),\n          css = styleBlocks[i].join(\"\\n\");\n\n        ss.type = \"text/css\";\n        ss.media = i;\n\n        //originally, ss was appended to a documentFragment and sheets were appended in bulk.\n        //this caused crashes in IE in a number of circumstances, such as when the HTML element had a bg image set, so appending beforehand seems best. Thanks to @dvelyk for the initial research on this one!\n        head.insertBefore(ss, lastLink.nextSibling);\n\n        if (ss.styleSheet) {\n          ss.styleSheet.cssText = css;\n        } else {\n          ss.appendChild(doc.createTextNode(css));\n        }\n\n        //push to appendedEls to track for later removal\n        appendedEls.push(ss);\n      }\n    },\n    //tweaked Ajax functions from Quirksmode\n    ajax = function(url, callback) {\n      var req = xmlHttp();\n      if (!req) {\n        return;\n      }\n      req.open(\"GET\", url, true);\n      req.onreadystatechange = function() {\n        if (req.readyState != 4 || req.status != 200 && req.status != 304) {\n          return;\n        }\n        callback(req.responseText);\n      }\n      if (req.readyState == 4) {\n        return;\n      }\n      req.send(null);\n    },\n    //define ajax obj\n    xmlHttp = (function() {\n      var xmlhttpmethod = false;\n      try {\n        xmlhttpmethod = new XMLHttpRequest();\n      } catch (e) {\n        xmlhttpmethod = new ActiveXObject(\"Microsoft.XMLHTTP\");\n      }\n      return function() {\n        return xmlhttpmethod;\n      };\n    })();\n\n  //translate CSS\n  ripCSS();\n\n  //expose update for re-running respond later on\n  respond.update = ripCSS;\n\n  //adjust on resize\n  function callMedia() {\n    applyMedia(true);\n  }\n  if (win.addEventListener) {\n    win.addEventListener(\"resize\", callMedia, false);\n  } else if (win.attachEvent) {\n    win.attachEvent(\"onresize\", callMedia);\n  }\n})(this);\n"],"sourceRoot":"/source/"}